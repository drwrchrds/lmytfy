<%# @hwang this is the show url page :) %>

<!--
<script>
	$(function() {
		var $searchBar = $(searchBar);
		yelpit.animateSearchThing.init($searchBar);
	});
</script>
-->
<div id='background' style="background-image: url(<%= asset_url 'empty_home.png' %>);">
    <div style="height:100%">
        <input id="find_desc">
        <input id="find_loc">
        <textarea id="instructions"></textarea>
        <div id="mouse" class="cursor">
            <img 
                src="http://vignette4.wikia.nocookie.net/iwbtb/images/4/4c/Cursor.png/revision/latest?cb=20140813020030" 
                width="20" 
                height="20" 
                id="mouse_image">
        </div>
    </div>
</div>

<script type='text/javascript'>
	var redirectUrl = "<%= @link.redirect_url.to_s.html_safe %>";
	var findDesc = "<%= @link.find_desc %>";
	var findLoc = "<%= @link.loc %>";
	var searchTerms = [findDesc, findLoc];

	var $mouse = $('#mouse');

    function getViewportSize() {
        var $viewport = $(background);
        return [$viewport.width(), $viewport.height()];
    }

    function animateClick() {
        var image = document.getElementById('mouse_image');
        image.src = "https://cdn0.iconfinder.com/data/icons/rcons-basic/16/cursor-512.png";

        setTimeout(function() {
            image.src = "http://vignette4.wikia.nocookie.net/iwbtb/images/4/4c/Cursor.png/revision/latest?cb=20140813020030";
            document.getElementById('instructions').value = "Oh man, that was so much work."
            setTimeout(function() {
                window.location = redirectUrl;
            }, 3000);
        }, 200);
    }

    function moveMouseHorizontal(deltaX, interval, onFinish) {
    	var pixelsPerStep = 2;
    	var steps = Math.abs(deltaX) / pixelsPerStep;
        var mouseEl = document.getElementById('mouse');

        var getNextPosition = function () {
            var x = parseInt(mouseEl.style.left);

            if (deltaX < 0) {
            	x -= pixelsPerStep;
            } else if (deltaX > 0) {
            	x += pixelsPerStep;
            }
            
            return x;
        };

        var step = function (i) { // was moveLots
            mouseEl.style.left = cssPixels(getNextPosition());
            if (i < steps) {
                setTimeout(function() {
                    step(i + 1);
                }, interval);
            } else {
                console.log('done moving mouse');
                setTimeout(onFinish, 300);
            }
        };
        step(0);
    };

    function moveMouseVertical(distanceY, interval, onFinish) {
    	var pixelsPerStep = 2;
    	var steps = Math.abs(distanceY) / pixelsPerStep;
        var mouseEl = document.getElementById('mouse');

        var getNextPosition = function () {
            var y = parseInt(mouseEl.style.top);
            if (distanceY < 0) {
            	y -= pixelsPerStep;
            } else {
            	y += pixelsPerStep;
            }
            return y;
        };

        var step = function (i) { // was moveLots
            mouseEl.style.top = cssPixels(getNextPosition());
            if (i < steps) {
                setTimeout(function() {
                    step(i + 1);
                }, interval);
            } else {
                console.log('done moving mouse');
                setTimeout(onFinish, 500);
            }
        }
        
        step(0);
    }

    function animateTyping(elements, terms) {
        console.log('typing search');

        var inputEl = elements.shift()
        var term = terms.shift();

        function type(string, element) {
            function writer(i) {

				if(string.length <= i++) {
	                element.value = string;

	                if (elements.length) {
	                    setTimeout(function() {
	                        animateTyping(elements, terms);
	                    }, 500);
	                } else {
	                    var desiredMouseDest = .815;
                        var viewportSize = getViewportSize();
                        var viewportWidth = viewportSize[0];
                        var viewportHeight = viewportSize[1];
                        var viewportRatio = viewportWidth / viewportHeight;

                        var imageFullWidth = 2666;
                        var imageFullHeight = 1540;
                        var imageRatio = imageFullWidth / imageFullHeight;

                        var renderedImageWidth, desiredX;
                        if (viewportRatio > imageRatio) {
                            // page is too wide, image is cut off at the bottom
                            // => we can base left-right movement off of screen width %
                            // => we can base top-bottom movement off of top of screen % 
                            renderedImageWidth = viewportWidth;

                            desiredX = desiredMouseDest * renderedImageWidth;
                        } else {
                            // page is too skinny, image is cut off at the sides
                            // => we can base left-right movement off of image width %
                            // => derive correct image width from image height          renderedImageHeight = viewportHeight;
                            renderedImageWidth = (viewportHeight / imageFullHeight) * imageFullWidth;

                            var lengthOfHiddenImageMargin = (renderedImageWidth - viewportWidth) / 2;

                            desiredX = (renderedImageWidth * desiredMouseDest) - lengthOfHiddenImageMargin;
                        }

	                    var mouseItem = document.getElementById('mouse');
	                    var mouseX = mouseItem.getBoundingClientRect().left;
	                    var amountToMove = Math.round(desiredX - mouseX);

                        document.getElementById('instructions').value = "Trickiest part: don't forget to press the search button."
	                    moveMouseHorizontal(amountToMove, 1, animateClick);
	                }
	                inputEl.blur();
	                return
				}

				element.value = string.substring(0, i); // set element value
				if (element.value[element.value.length - 1] != " ") element.focus();

				setTimeout(function(){ 
					writer(i); 
				}, 100);
            };

            writer(0);
        };
        type(term, inputEl);
    };

    function cssPixels(number) {
    	return number + 'px';
    }

    $(function() {
        console.log( "ready!" );
 
        var viewportSize = getViewportSize();
        var viewportWidth = viewportSize[0];
        var viewportHeight = viewportSize[1];
        var viewportRatio = viewportWidth / viewportHeight;

        var imageFullWidth = 2666;
        var imageFullHeight = 1540;
        var imageRatio = imageFullWidth / imageFullHeight;

        // percentages correspond to positions of elements on background image
        var inputTrueHeight = 0.03;
        var inputTrueTop = 0.02;
        var descriptionInputTrueLeft = 0.26;
        var searchInputTrueLeft = 0.55;
        var inputTrueWidth = 0.25;

        var instrTrueTop = 0.15;
        var instrTrueLeft = 0.17;
        var instrTrueWidth = .4;
        var instrTrueHeight = .15;

        var renderedImageHeight,
            renderedImageWidth,
            locationInputLeft,
            descriptionInputLeft,
            instrLeft;
        if (viewportRatio > imageRatio) {
        	// page is too wide, image is cut off at the bottom
        	// => we can base left-right movement off of screen width %
        	// => we can base top-bottom movement off of top of screen % 
        	renderedImageWidth = viewportWidth;
        	renderedImageHeight = (viewportWidth / imageFullWidth) * imageFullHeight;

        	descriptionInputLeft = cssPixels(descriptionInputTrueLeft * renderedImageWidth);
        	locationInputLeft = cssPixels(searchInputTrueLeft * renderedImageWidth);
            instrLeft = cssPixels(instrTrueLeft * renderedImageWidth)
        } else {
         	// page is too skinny, image is cut off at the sides
        	// => we can base left-right movement off of image width %
        	// => derive correct image width from image height       	renderedImageHeight = viewportHeight;
        	renderedImageWidth = (viewportHeight / imageFullHeight) * imageFullWidth;
        	renderedImageHeight = viewportHeight;

        	var lengthOfHiddenImageMargin = (renderedImageWidth - viewportWidth) / 2;

        	descriptionInputLeft = cssPixels(
        		(renderedImageWidth * descriptionInputTrueLeft) - lengthOfHiddenImageMargin
        	);
        	locationInputLeft = cssPixels(
        		renderedImageWidth * searchInputTrueLeft - lengthOfHiddenImageMargin
        	);
            instrLeft = cssPixels(
                (renderedImageWidth * instrTrueLeft) - lengthOfHiddenImageMargin
            );
        }

    	var inputWidth = cssPixels(inputTrueWidth * renderedImageWidth);
     	var inputTop = cssPixels(inputTrueTop * renderedImageHeight);
    	var inputHeight = cssPixels(inputTrueHeight * renderedImageHeight);

        var instrTop = cssPixels(instrTrueTop * renderedImageHeight);
        var instrHeight = cssPixels(instrTrueHeight * renderedImageHeight);
        var instrWidth = cssPixels(instrTrueWidth * renderedImageWidth);

        var searchItem = document.getElementById('find_desc');
        searchItem.style.left = descriptionInputLeft;
        searchItem.style.top = inputTop
        searchItem.style.width = inputWidth;
        searchItem.style.height = inputHeight;
 
        var locItem = document.getElementById('find_loc');
        locItem.style.left = locationInputLeft;
        locItem.style.top = inputTop
        locItem.style.width = inputWidth;
        locItem.style.height = inputHeight;

        var instrItem = document.getElementById('instructions');
        instrItem.style.left = instrLeft;
        instrItem.style.top = instrTop;
        instrItem.style.width = instrWidth;
        instrItem.style.height = instrHeight;
        instrItem.value = "So I heard you need some ideas for where to go."
 
        var mouseItemY = .8;
 
        var mouseItem = document.getElementById('mouse');
        mouseItem.style.left = descriptionInputLeft;
        mouseItem.style.top = cssPixels(Math.round(mouseItemY * viewportHeight));
 
        var distanceY = Math.round(
            (mouseItemY * viewportHeight) - (inputTrueTop * viewportHeight)
        ) * .96;
 		var verticalStepInterval = 1;
 		var inputElements = [searchItem, locItem];

        setTimeout(function() {
            moveMouseVertical(-distanceY, verticalStepInterval, function onFinishMovingMouseVertical() {
                animateTyping(inputElements, searchTerms);
            });
            instrItem.value = "Watch carefully. It's very complicated..."
        }, 3000);
    });
</script>